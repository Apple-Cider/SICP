#lang racket

(define (subsets s)
  (display "s: ")
  (display s)
  (newline)
  (display "(car s): ")
  (if (null? s)
      (display "n/a")
      (display (car s)))
  (newline)
  (if (null? s)
      (list (list))
      (let ((rest (subsets (cdr s))))
        (display "  (car s): ")
        (display (car s))
        (newline)
        (display "  (cdr s): ")
        (display (cdr s))
        (newline)
        (newline)
        (append rest (map (lambda (x) (cons (car s) x)) rest)))))

(define my-list (list 1))

(subsets my-list)