(fold-right / 1 (list 1 2 3))
(/ 1 (/ 2 (/ 3 1)))
(/ 1 (/ 2 3))
(/ 1 2/3)
3/2

(fold-left / 1 (list 1 2 3))
(/ (/ (/ 1 1) 2) 3)
(/ (/ 1 2) 3)
(/ 1/2 3)
1/6

(fold-right list nil (list 1 2 3))
(list 1 (list 2 (list 3 nil)))
(list 1 (list 2 '(3 '())))
(list 1 '(2 '(3 '())))
'(1 '(2 '(3 '())))

(fold-left list nil (list 1 2 3))
(list (list (list '() 1) 2) 3)
(list (list '( '() 1) 2) 3)
(list '( '( '() 1) 2) 3)
'( '( '( '() 1) 2) 3)

For fold-right and fold-left to produce the same values for any sequence,
op should satisfy the associative property. This guarantees the direction
of deferring operations will not compute unique results.